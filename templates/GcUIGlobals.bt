#ifndef NMS_GcUIGlobals
#define NMS_GcUIGlobals

struct GcUIGlobals {
    uint unknown0;
    float unknown4;
    FSkip(8);
    float unknown10;
    float unknown14;
    float unknown18;
    float unknown1C;
    float unknown20;
    float unknown24;
    float unknown28;
    float unknown2C;
    float unknown30;
    uint unknown34;
    float unknown38;
    float unknown3C;
    float unknown40;
    float unknown44;
    float unknown48;
    float unknown4C;
    float unknown50;
    float unknown54;
    float unknown58;
    float unknown5C;
    float unknown60;
    float unknown64;
    float unknown68;
    float unknown6C;
    float unknown70;
    float unknown74;
    float unknown78;
    float unknown7C;
    float unknown80;
    float unknown84;
    //double unknown88;
    float unknown88;
    FSkip(4);
    float unknown90;
    float unknown94;
    float unknown96;
    float unknown9C;
    float unknownA0;
    //double unknown164;
    float unknownA4;
    FSkip(4);
    float unknownAC;
    float unknownB0;
    //double unknownB4;
    float unknownB4;
    FSkip(4);
    uint unknownBC; // enum?
    float unknownC0;
    float unknownC4;
    //double unknownC8;
    float unknownC8;
    FSkip(4);
    uint unknownD0; // enum?
    FSkip(12);
    //double unknownE0;
    float unknownE0;
    FSkip(4);
    float unknownE8;
    float unknownEC;
    float unknownF0;
    float unknownF4;
    float unknownF8;
    float unknownFC;
    float unknown100;
    //double unknown104;
    float unknown104;
    FSkip(4);
    float unknown10C;
    float unknown110;
    uint unknown114;
    bool unknown118; // bool?
    FSkip(3);
    float unknown11C;
    float unknown120;
    float unknown124;
    float unknown128;
    float unknown12C;
    float unknown130;
    float unknown134;
    float unknown138;
    float unknown13C;
    float unknown140;
    float unknown144;
    float unknown148;
    float unknown14C;
    float unknown150;
    FSkip(12);
    float unknown160;
    float unknown164;
    float unknown168;
    float unknown16C;
    float unknown170;
    float unknown174;
    float unknown178;
    float unknown17C;
    float unknown180;
    float unknown184;
    float unknown188;
    float unknown18C;
    //double unknown190;
    float unknown190;
    FSkip(4);
    float unknown198; // uint?
    float unknown19C;
    float unknown1A0;
    float unknown1A4;
    float unknown1A8;
    float unknown1AC;
    float unknown1B0;
    float unknown1B4;
    float unknown1B8;
    float unknown1BC;
    float unknown1C0;
    float unknown1C4;
    float unknown1C8;
    float unknown1CC;
    float unknown1D0;
    char unknown1D4[0x80];
    char unknown254[0x80];
    char unknown2D4[0x80];
    char unknown354[0x80];
    char unknown3D4[0x80];
    char unknown454[0x80];
    char unknown4D4[0x80];
    char unknown554[0x80];
    char unknown5D4[0x80];
    char unknown654[0x80];
    char unknown6D4[0x80];
    char unknown754[0x80];
    char unknown7D4[0x80];
    char unknown854[0x80];
    char unknown8D4[0x80];
    char unknown954[0x80];
    char unknown9D4[0x80];
    char unknownA54[0x80];
    char unknownAD4[0x80];
    char unknownB54[0x80];
    char unknownBD4[0x80];
    char unknownC54[0x80];
    char unknownCD4[0x80];
    char unknownD54[0x80];
    char unknownDD4[0x80];
    char unknownE54[0x80];
    char unknownED4[0x80];
    char unknownF54[0x80];
    char unknownFD4[0x80];
    char unknown1054[0x80];
    char unknown10D4[0x80];
    char unknown1154[0x80];
    char unknown11D4[0x80];
    char unknown1254[0x80];
    char unknown12D4[0x80];
    char unknown1354[0x80];
    char unknown13D4[0x80];
    char unknown1454[0x80];
    char unknown14D4[0x80];
    char unknown1554[0x80];
    char unknown15D4[0x80];
    char unknown1654[0x80];
    char unknown16D4[0x80];
    char unknown1754[0x80];
    char unknown17D4[0x80];
    char unknown1854[0x80];
    char unknown18D4[0x80];
    char unknown1954[0x80];
    char unknown19D4[0x80];
    char unknown1A54[0x80];
    char unknown1AD4[0x80];
    char unknown1B54[0x80];
    char unknown1BD4[0x80];
    char unknown1C54[0x80];
    char unknown1CD4[0x80];

    float unknown1D54;
    uint unknown1D58;
    float unknown1D5C;
    float unknown1D60;
    float unknown1D64;
    float unknown1D68;
    float unknown1D6C;
    float unknown1D70;
    float unknown1D74;
    float unknown1D78;
    float unknown1D7C;
    float unknown1D80;
    float unknown1D84;
    float unknown1D88;
    float unknown1D8C; // uint?
    float unknown1D90;
    float unknown1D94;
    float unknown1D98;
    float unknown1D9C;
    float unknown1DA0;
    float unknown1DA4;
    float unknown1DA8;
    float unknown1DAC;
    float unknown1DB0;
    float unknown1DB4;
    float unknown1DB8;
    float unknown1DBC;
    float unknown1DC0;
    float unknown1DC4;
    float unknown1DC8;
    float unknown1DCC;
    float unknown1DD0;
    float unknown1DD4;
    float unknown1DD8;
    float unknown1DDC;
    float unknown1DE0;
    float unknown1DE4;
    float unknown1DE8;
    FSkip(4);
    float unknown1DF0;
    float unknown1DF4;
    float unknown1DF8;
    float unknown1DFC;
    float unknown1E00;
    float unknown1E04;
    float unknown1E08;
    float unknown1E0C;
    char unknown1E10[0x20];
    float unknown1E30;
    float unknown1E34;
    float unknown1E38;
    float unknown1E3C;
    float unknown1E40;
    float unknown1E44;
    float unknown1E48;
    float unknown1E4C;
    float unknown1E50;
    float unknown1E54;
    float unknown1E58;
    float unknown1E5C;
    float unknown1E60;
    float unknown1E64;
    float unknown1E68;
    float unknown1E6C;
    float unknown1E70;
    float unknown1E74;
    float unknown1E78;
    float unknown1E7C;
    //double unknown1E80; // uint64?
    float unknown1E80;
    FSkip(4);
    uint unknown1E88;
    FSkip(4);
    float unknown1E90;
    float unknown1E94;
    float unknown1E98;
    float unknown1E9C;
    float unknown1EA0;
    float unknown1EA4;
    float unknown1EA8;
    float unknown1EAC;
    float unknown1EB0;
    float unknown1EB4;
    float unknown1EB8;
    float unknown1EBC;
    float unknown1EC0;
    //double unknown1EC4;
    float unknown1EC4;
    FSkip(4);
    float unknown1ECC;
    //double unknown1ED0;
    float unknown1ED0;
    FSkip(4);
    float unknown1ED8; // uint?
    float unknown1EDC;
    float unknown1EE0;
    FSkip(12);
    float unknown1EF0;
    float unknown1EF4;
    float unknown1EF8;
    //double unknown1EFC;
    float unknown1EFC;
    FSkip(4);
    //double unknown1F04; // uint64?
    float unknown1F04;
    FSkip(4);
    float unknown1F0C;
    float unknown1F10;
    float unknown1F14;
    float unknown1F18;
    //double unknown1F1C;
    float unknown1F1C;
    FSkip(4);
    //double unknown1F24; // uint64?
    float unknown1F24;
    FSkip(4);
    float unknown1F2C;
    float unknown1F30; // uint?
    float unknown1F34; // uint?
    float unknown1F38;
    float unknown1F3C; // uint?
    //double unknown1F40; // uint64?
    float unknown1F40;
    FSkip(4);
    float unknown1F48;
    float unknown1F4C;
    //double unknown1F50;
    float unknown1F50;
    FSkip(4);
    float unknown1F58;
    float unknown1F5C;
    float unknown1F60;
    float unknown1F64;
    float unknown1F68;
    float unknown1F6C;
    float unknown1F70;
    float unknown1F74;
    float unknown1F78;
    float unknown1F7C;
    float unknown1F80;
    float unknown1F84;
    float unknown1F88;
    float unknown1F8C;
    float unknown1F90;
    float unknown1F94; // uint?
    float unknown1F98;
    float unknown1F9C;
    ushort unknown1FA0;
    bool unknown1FA2; // bool?
    char unknown1FA3[0x20];
    char unknown1FC3[0x20];
    FSkip(1);
    float unknown1FE4;
    float unknown1FE8;
    float unknown1FEC;
    float unknown1FF0;
    float unknown1FF4;
    float unknown1FF8;
    float unknown1FFC; // uint?
    float unknown2000;
    float unknown2004;
    float unknown2008;
    float unknown200C;
    float unknown2010;
    float unknown2014;
    char unknown2018[0x80];
    char unknown2098[0x80];
    char unknown2118[0x80];
    char unknown2198[0x80];
    char unknown2218[0x80];
    char unknown2298[0x80];
    char unknown2318[0x80];
    char unknown2398[0x80];
    char unknown2418[0x80];
    char unknown2498[0x80];
    char unknown2518[0x80];
    char unknown2598[0x80];
    char unknown2618[0x80];
    char unknown2698[0x80];
    char unknown2718[0x80];
    char unknown2798[0x80];
    char unknown2818[0x80];
    char unknown2898[0x80];
    float unknown2918;
    FSkip(4);
    float unknown2920;
    float unknown2924;
    float unknown2928;
    float unknown292C;
    float unknown2930;
    float unknown2934;
    float unknown2938;
    float unknown293C;
    float unknown2940;
    float unknown2944;
    float unknown2948;
    float unknown294C;
    float unknown2950;
    float unknown2954;
    float unknown2958;
    float unknown295C;
    float unknown2960;
    float unknown2964;
    float unknown2968;
    float unknown296C;
    float unknown2970;
    float unknown2974;
    float unknown2978;
    float unknown297C;
    float unknown2980;
    float unknown2984;
    float unknown2988;
    float unknown298C;
    float unknown2990;
    float unknown2994;
    float unknown2998;
    float unknown299C;
    float unknown29A0;
    float unknown29A4;
    float unknown29A8;
    float unknown29AC;
    float unknown29B0;
    float unknown29B4;
    float unknown29B8;
    //double unknown29BC; // uint64?
    float unknown29BC;
    FSkip(4);
    float unknown29C4;
    float unknown29C8;
    float unknown29CC;
    float unknown29D0;
    float unknown29D4;
    float unknown29D8;
    float unknown29DC;
    // unknown29E0
    local int i;
    for (i=0;i<13;i++) {
        struct {
            float unknown0;
            FSkip(12);
            //double unknown10; // uint64?
            float unknown10;
            FSkip(4);
            float unknown18; // uint?
            //double unknown20; // uint64?
            float unknown20;
            FSkip(8);
            float unknown28;
            float unknown2C;
            bool unknown30;
            FSkip(3);
            float unknown34;
            float unknown38;
            FSkip(4);
            float unknown40;
            //double unknown44;
            float unknown44;
            FSkip(4);
            uint unknown4C;
            //double unknown50; // uint64?
            //float unknown50;
            char unknown50[0x8];
            //double unknown58; // uint64?
            float unknown58;
            FSkip(4);
            float unkown60;
            FSkip(12);
        } Unknown29E0;
    }
    float unknown2F90;
    float unknown2F94;
    float unknown2F98;
    float unknown2F9C;
    float unknown2FA0;
    float unknown2FA4;
    float unknown2FA8;
    float unknown2FAC;
    //double unknown2FB0; // uint64?
    float unknown2FB0;
    FSkip(4);
    float unknown2FB8; // uint64?
    float unknown2FBC;
    float unknown2FC0;
    float unknown2FC4;
    float unknown2FC8;
    float unknown2FCC;
    //double unknown2FD0; // uint64?
    float unknown2FD0;
    FSkip(4);
    //double unknown2FD8; // uint64?
    float unknown2FD8;
    FSkip(4);
    float unknown2FE0;
    float unknown2FE4;
    float unknown2FE8;
    float unknown2FEC;
    float unknown2FF0;
    float unknown2FF4;
    float unknown2FF8;
    //double unknown2FFC; // uint64?
    float unknown2FFC;
    FSkip(4);
    //double unknown3004; // uint64?
    float unknown3004;
    FSkip(4);
    float unknown300C;
    float unknown3010;
    //double unknown3014; // uint64?
    float unknown3014;
    FSkip(4);
    float unknown301C; // uint64?
    float unknown3020;
    float unknown3024;
    float unknown3028;
    uint unknown302C;
    float unknown3030;
    float unknown3034;
    float unknown3038;
    float unknown303C;
    //double unknown3040; // uint64?
    float unknown3040;
    FSkip(4);
    float unknown3048;
    float unknown304C;
    float unknown3050;
    float unknown3054;
    float unknown3058;
    float unknown305C;
    float unknown3060;
    float unknown3064;
    float unknown3068;
    float unknown306C;
    float unknown3070;
    FSkip(12);
    float unknown3080;
    //double unknown3084; // uint64?
    float unknown3084;
    FSkip(4);
    float unknown308C;
    float unknown3090;
    float unknown3094;
    float unknown3098;
    float unknown309C;
    float unknown30A0;
    float unknown30A4;
    float unknown30A8;
    float unknown30AC;
    float unknown30B0;
    float unknown30B4;
    FSkip(8);
    float unknown30C0;
    float unknown30C4;
    float unknown30C8;
    float unknown30CC;
    float unknown30D0;
    float unknown30D4;
    float unknown30D8;
    float unknown30DC;
    float unknown30E0;
    float unknown30E4;
    float unknown30E8;
    float unknown30EC;
    float unknown30F0;
    float unknown30F4;
    float unknown30F8;
    float unknown30FC;
    float unknown3100;
    float unknown3104;
    float unknown3108;
    float unknown310C;
    float unknown3110;
    float unknown3114;
    float unknown3118;
    float unknown311C;
    float unknown3120;
    float unknown3124;
    float unknown3128;
    float unknown312C;
    float unknown3130;
    float unknown3134;
    float unknown3138;
    float unknown313C;
    float unknown3140;
    FSkip(12);
    float unknown3150;
    float unknown3154;
    float unknown3158;
    FSkip(4);
    //double unknown3160; // uint64?
    float unknown3160;
    FSkip(4);
    float unknown3168; // uint64?
    float unknown316C;
    float unknown3170;
    //double unknown3174; // uint64?
    float unknown3174;
    FSkip(4);
    float unknown317C;
    float unknown3180;
    float unknown3184;
    float unknown3188;
    float unknown318C;
    float unknown3190;
    float unknown3194;
    float unknown3198;
    float unknown319C;
    float unknown31A0;
    float unknown31A4;
    float unknown31A8;
    float unknown31AC;
    float unknown31B0;
    float unknown31B4;
    float unknown31B8;
    float unknown31BC;
    float unknown31C0;
    float unknown31C4;
    bool unknown31C8; // bool?
    FSkip(7);
    float unknown31D0;
    float unknown31D4;
    float unknown31D8;
    float unknown31DC;
    float unknown31E0;
    float unknown31E4;
    float unknown31E8;
    float unknown31EC;
    float unknown31F0;
    float unknown31F4;
    bool unknown31F8; // bool?
    FSkip(7);
    float unknown3200;
    float unknown3204;
    float unknown3208;
    float unknown320C;
    float unknown3210;
    float unknown3214;
    float unknown3218;
    float unknown321C;
    float unknown3220;
    float unknown3224;
    bool unknown3228; // bool?
    FSkip(7);
    float unknown3230;
    float unknown3234;
    float unknown3238;
    float unknown323C;
    float unknown3240;
    float unknown3244;
    float unknown3248;
    float unknown324C;
    float unknown3250;
    float unknown3254;
    bool unknown3258; // bool?
    FSkip(7);
    float unknown3260;
    float unknown3264;
    float unknown3268;
    float unknown326C;
    float unknown3270;
    float unknown3274;
    float unknown3278;
    float unknown327C;
    float unknown3280;
    float unknown3284;
    bool unknown3288; // bool?
    FSkip(7);
    float unknown3290;
    float unknown3294;
    float unknown3298;
    float unknown329C;
    float unknown32A0;
    float unknown32A4;
    float unknown32A8;
    float unknown32AC;
    float unknown32B0;
    float unknown32B4;
    float unknown32B8;
    float unknown32BC;
    float unknown32C0;
    FSkip(12);
    float unknown32D0;
    float unknown32D4;
    float unknown32D8;
    float unknown32DC;
    float unknown32E0;
    float unknown32E4;
    float unknown32E8;
    float unknown32EC;
    float unknown32F0;
    float unknown32F4;
    float unknown32F8;
    float unknown32FC;
    float unknown3300;
    float unknown3304;
    float unknown3308;
    float unknown330C;
    float unknown3310;
    float unknown3314;
    float unknown3318;
    float unknown331C;
    char unknown3320[0x100];
    char unknown3420[0x100];
    char unknown3520[0x100];
    char unknown3620[0x100];
    char unknown3720[0x100];
    char unknown3820[0x100];
    char unknown3920[0x100];
    char unknown3A20[0x100];
    float unknown3B20;
    float unknown3B24;




};

#endif
